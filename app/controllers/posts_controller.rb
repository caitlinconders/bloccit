class PostsController < ApplicationController

  before_action :require_sign_in, except: :show

  before_action :authorize_user, except: [:show, :new, :create]


  def show

    # we find the post that corresponds to the id in the params that was passed to  show and assign it to @post. Unlike in the index method, in the show method, we populate an instance variable with a single post, rather than a collection of posts.
    @post = Post.find(params[:id])
  end

  def new
    @topic = Topic.find(params[:topic_id])

    # we create an instance variable, @post, then assign it an empty post returned by Post.new.
    @post = Post.new
  end

  def create

     # we call Post.new to create a new instance of Post.

     @topic = Topic.find(params[:topic_id])
     @post = @topic.posts.build(post_params)
     @post.user = current_user

     # if we successfully save Post to the database, we display a success message using flash[:notice] and redirect the user to the route generated by @post. Redirecting to @post will direct the user to the posts show view.
     if @post.save

       # we assign a value to flash[:notice]. The flash hash provides a way to pass temporary values between actions. Any value placed in flash will be available in the next action and then deleted.
       flash[:notice] = "Post was saved."
       redirect_to [@topic, @post]
     else

       # if we do not successfully save Post to the database, we display an error message and render the new view again.
       flash.now[:alert] = "There was an error saving the post. Please try again."
       render :new
     end
   end

  def edit
    @post = Post.find(params[:id])
  end

  def update
    @post = Post.find(params[:id])
    @post.assign_attributes(post_params)


    if @post.save
      flash[:notice] = "Post was updated."
      redirect_to [@post.topic, @post]
    else
      flash.now[:alert] = "There was an error saving the post. Please try again."
      render :edit
    end
  end

  def destroy
    @post = Post.find(params[:id])

    if current_user.moderator?
      flash[:alert] = "You must be an admin to do that."
      redirect_to [@post.topic, @post]
      return
    end

    # we call destroy on post. if the call is successful, we set a flash message and redirect the user to the posts index view. if destroy fails, then we redirect the user to the show view using render :show.
    if @post.destroy
      flash[:notice] = "\"#{@post.title}\" was deleted successfully."
      redirect_to @post.topic
    else
      flash.now[:alert] = "There was an error deleting the post."
      render :show
    end
  end

    private
    def post_params
      params.require(:post).permit(:title, :body)
    end

    def authorize_user
      post = Post.find(params[:id])

      unless current_user == post.user || current_user.admin? || current_user.moderator?
        flash[:alert] = "You must be an admin to do that."
        redirect_to [post.topic, post]
      end
    end
end
